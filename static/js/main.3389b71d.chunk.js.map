{"version":3,"sources":["Components/MyAppBar.js","Components/TopRow.js","Components/NameCard.js","Components/BadgeInputter.js","Components/NumberPresenter.js","Components/BadgeTermAdjuster.js","Components/BadgeNumberAdjuster.js","Components/TotalResultPresenter.js","Components/BadgeAllocater.js","Components/ScheduleOfStaff.js","resources/customTheme.js","App.js","reportWebVitals.js","index.js"],"names":["MyAppBar","AppBar","position","sx","bgcolor","boxShadow","Typography","variant","margin","color","m","TopRow","monthlyWindow","tableNames","Box","textAlign","p","Stack","direction","map","val","i","Grid","xs","length","height","WINDOW_HEIGHT","borderLeft","titleEN","titleJA","NameCard","staff","id","marginTop","nameEn","fontWeight","name","BadgeInputter","index","badgeUnit","onClassification","f","onStartMonth","onEndMonth","FormControl","fullWidth","InputLabel","Select","labelid","value","badgeClassification","label","fontSize","onChange","e","target","associatedBadge","MenuItem","badgeValue","badgeName","component","TextField","startMonth","type","size","InputLabelProps","shrink","InputProps","endMonth","NumberPresenter","termStartYear","Number","substr","termStartMonth","termEndYear","termEndMonth","amoutOfLastYear","amountPerBadgeMonth","filter","badge","year","month","reduce","prev","current","amount","amoutOfTwoYearsAgo","amoutOfThreeYearsAgo","Math","floor","Warning","container","whiteSpace","Tooltip","title","noWrap","paddingTop","TermAdjuster","extendStopper","onTermChange","ButtonGroup","disableElevation","Button","disabled","badgeLength","onClick","KeyboardArrowLeft","KeyboardArrowRight","BadgeNumberAdjuster","addBadgeStopper","onBadgeNumberChange","DeleteForeverOutlined","AddCircleOutlineOutlined","TotalResultPresenter","badgeUnits","isTotalTermMatched","totalAmount","BadgeAllocater","IconButton","PlaylistAddCheck","onClose","ScheduleOfStaff","sumTermsLength","columns","GRID_HEIGHT","border","_","BadgeTermAdjuster","customTheme","createTheme","palette","primary","main","secondary","error","info","App","initialBadgeUnitsOfStaff","initialBadge","staffs","staffID","React","useState","setBadge","console","log","newBadge","isExtend","isAdd","concat","ThemeProvider","theme","startIcon","PersonAdd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3389b71d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Typography } from \"@mui/material\";\r\n\r\nconst MyAppBar = () => {\r\n\treturn (\t\t\r\n\t\t<AppBar \r\n\t\t\tposition=\"relative\"\r\n\t\t\tsx={{ \r\n\t\t\t\tbgcolor:\"white\",\r\n\t\t\t\tboxShadow:1\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant=\"h5\"\r\n\t\t\t\tmargin=\"4\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tcolor:\"black\",\r\n\t\t\t\t\tm:4\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t🍒 no title.\r\n\t\t\t</Typography>\r\n\t\t</AppBar>\t\r\n\t)\r\n};\r\n\r\nexport default MyAppBar;","import React from \"react\";\r\nimport { Grid, Box, Typography, Stack } from \"@mui/material\";\r\n\r\n\r\nconst TopRow =\r\n    ({ monthlyWindow }) =>\r\n{   \r\n    const WINDOW_HEIGHT = 60;\r\n\r\n    const firstTabelName = ({\r\n        \"titleJA\":\"担当者\",\r\n        \"titleEN\":\"Staffs\"\r\n    });\r\n    const lastTableName = ({\r\n        \"titleJA\":\"\",\r\n        \"titleEN\":\"\"\r\n    });\r\n    const tableNames = [\r\n        firstTabelName,\r\n        ...monthlyWindow,\r\n        lastTableName\r\n    ];\r\n\r\n    return (\r\n        <Box\r\n            sx = {{\r\n                textAlign:\"center\",\r\n                p:\"30px 0px 0px\"\r\n            }}\r\n        >\r\n            <Stack\r\n                direction=\"row\"\r\n                //borderBottom=\"1px solid black\"\r\n            >\r\n                {[...tableNames].map((val, i)=>\r\n                    <Grid\r\n                        xs={12/[...tableNames].length}\r\n                        height={WINDOW_HEIGHT+\"px\"}\r\n                        borderLeft={\r\n                            i !== 0\r\n                                ? \"1pt dashed black\"\r\n                                : \"\"\r\n                        }\r\n                    >\r\n                        <Typography \r\n                            variant=\"subtitle2\"\r\n                            color=\"gray\"\r\n                        >\r\n                            {val.titleEN}<br/>\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"subtitle2\"\r\n                        >\r\n                            {val.titleJA}\r\n                        </Typography>\r\n                    </Grid>\r\n                )}\r\n            </Stack>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TopRow;","import React from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst NameCard = \r\n    ({\r\n        staff\r\n    }) =>\r\n{\r\n    return (\r\n        <Box\r\n            p=\"1\"\r\n            sx={{\r\n                p:2\r\n            }}\r\n            //border=\"1px solid black\"\r\n        >\r\n            <Typography\r\n                variant=\"subtitle2\"\r\n            >\r\n                ID:{staff.id}<br/>\r\n            </Typography>\r\n            <Typography\r\n                variant=\"subtitle2\"\r\n            >\r\n                {staff.position}\r\n            </Typography>\r\n            <Typography\r\n                variant=\"subtitle2\"\r\n                marginTop=\"20pt\"\r\n            >\r\n                {staff.nameEn}\r\n            </Typography>\r\n            <Typography\r\n                variant=\"h5\"\r\n                sx={{fontWeight:\"600\"}}\r\n            >\r\n                {staff.name}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default NameCard;","import React from \"react\";\r\nimport { InputLabel, MenuItem, FormControl, Select, Box, Stack, TextField } from \"@mui/material\";\r\n\r\nconst BadgeInputter =\r\n    ({\r\n        index,\r\n        staff,\r\n        badgeUnit,\r\n        onClassification = f => f,\r\n        onStartMonth = f => f,\r\n        onEndMonth = f => f\r\n    }) =>\r\n{   \r\n    //console.log(badgeUnit)\r\n    return(\r\n        <Box \r\n            sx={{\r\n                m:2,\r\n                //border:1\r\n            }}\r\n        >\r\n            <FormControl \r\n                fullWidth\r\n            >\r\n                <InputLabel \r\n                    id=\"classificationSelectLabel\"\r\n                >\r\n                    Class\r\n                </InputLabel>\r\n                <Select\r\n                    labelid=\"classificationSelectLabel\"\r\n                    id=\"classificationSelect\"\r\n                    value={badgeUnit.badgeClassification}\r\n                    label=\"classification\"\r\n                    sx={{\r\n                        fontSize:\"12px\",\r\n                        color:\"black\"\r\n                    }}\r\n                    onChange={(e) =>\r\n                        onClassification(staff.id, index, e.target.value)\r\n                    }\r\n                >                       \r\n                    {[...staff.associatedBadge].map((val) =>\r\n                        <MenuItem \r\n                            value={val.badgeValue}\r\n                            sx={{fontSize:\"10px\"}}\r\n                        >\r\n                            {val.badgeValue}- {val.badgeName}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <Stack\r\n                component=\"form\"\r\n                p=\"10pt 5pt 0pt\"\r\n            >\r\n                <TextField                    \r\n                    variant=\"standard\"\r\n                    id=\"startMonth\"\r\n                    label=\"Term Starting Month\"\r\n                    value={badgeUnit.startMonth}\r\n                    type=\"month\"\r\n                    size=\"small\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                        sx:{fontSize:\"14px\"}\r\n                    }}\r\n                    InputProps={{\r\n                        sx:{fontSize:\"12px\"}\r\n                    }}\r\n                    onChange={(e) => \r\n                        //badgeUnit.startMonth = e.target.value\r\n                        onStartMonth(staff.id, index, e.target.value)\r\n                    }\r\n                />\r\n            </Stack>\r\n\r\n            <Stack  \r\n                component=\"form\"\r\n                p=\"5pt 5pt 0pt\"\r\n            >\r\n                <TextField\r\n                    variant=\"standard\"\r\n                    id=\"endMonth\"\r\n                    label=\"Term Ending Month\"\r\n                    value={badgeUnit.endMonth}\r\n                    type=\"month\"\r\n                    size=\"small\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                        sx:{fontSize:\"14px\"}\r\n                    }}\r\n                    InputProps={{\r\n                        sx:{fontSize:\"12px\"}\r\n                    }}\r\n                    onChange={(e) =>\r\n                        onEndMonth(staff.id, index, e.target.value)\r\n                    }\r\n                />\r\n            </Stack>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default BadgeInputter;","import React from \"react\";\r\nimport { Box, Typography, Stack, Grid, Tooltip, Card } from \"@mui/material\";\r\nimport { Warning } from \"@mui/icons-material\";\r\n\r\nimport amountPerBadgeMonth from \"../resources/amountPerBadgeMonth.json\"\r\n\r\nconst NumberPresenter \r\n    = ({\r\n        badgeUnit\r\n    }) => \r\n{\r\n    const termStartYear = Number(badgeUnit.startMonth.substr(0,4));\r\n    const termStartMonth = Number(badgeUnit.startMonth.substr(5,6));\r\n    const termEndYear = Number(badgeUnit.endMonth.substr(0,4));\r\n    const termEndMonth = Number(badgeUnit.endMonth.substr(5,6));\r\n    const badgeClassification = badgeUnit.badgeClassification;\r\n\r\n    /*\r\n    const filteredAmounts = \r\n        [...amountPerBadgeMonth].filter(\r\n            val =>\r\n                (val.badge === badgeClassification) &&\r\n                (\r\n                    (val.year === termStartYear && val.month >= termStartMonth)\r\n                        || (val.year > termStartYear)\r\n                ) &&\r\n                (\r\n                    (val.year === termEndYear && val.month <= termEndMonth)\r\n                        || (val.year < termEndYear)\r\n                )\r\n        );\r\n    badgeUnit.amount = filteredAmounts.reduce(\r\n        (prev, current) => {\r\n            return prev + current.amount\r\n        }, 0\r\n    );*/\r\n    const filteredAmountsOfLastYear =\r\n        [...amountPerBadgeMonth].filter(\r\n            val =>\r\n                (val.badge === badgeClassification) &&\r\n                (\r\n                    (val.year === termStartYear-1 && val.month >= termStartMonth)\r\n                        || (val.year > termStartYear-1)\r\n                ) &&\r\n                (\r\n                    (val.year === termEndYear-1 && val.month <= termEndMonth)\r\n                        || (val.year < termEndYear-1)\r\n                )\r\n        );\r\n    const amoutOfLastYear = filteredAmountsOfLastYear.reduce(\r\n        (prev, current) => {\r\n            return prev + current.amount\r\n        }, 0\r\n    );\r\n\r\n    const filteredAmountsOfTwoYearsAgo =\r\n        [...amountPerBadgeMonth].filter(\r\n            val =>\r\n                (val.badge === badgeClassification) &&\r\n                (\r\n                    (val.year === termStartYear-2 && val.month >= termStartMonth)\r\n                        || (val.year > termStartYear-2)\r\n                ) &&\r\n                (\r\n                    (val.year === termEndYear-2 && val.month <= termEndMonth)\r\n                        || (val.year < termEndYear-2)\r\n                )\r\n        );\r\n    const amoutOfTwoYearsAgo = filteredAmountsOfTwoYearsAgo.reduce(\r\n        (prev, current) => {\r\n            return prev + current.amount\r\n        }, 0\r\n    );\r\n    const filteredAmountsOfThreeYearsAgo =\r\n        [...amountPerBadgeMonth].filter(\r\n            val =>\r\n                (val.badge === badgeClassification) &&\r\n                (\r\n                    (val.year === termStartYear-3 && val.month >= termStartMonth)\r\n                        || (val.year > termStartYear-3)\r\n                ) &&\r\n                (\r\n                    (val.year === termEndYear-3 && val.month <= termEndMonth)\r\n                        || (val.year < termEndYear-3)\r\n                )\r\n        );\r\n    const amoutOfThreeYearsAgo = filteredAmountsOfThreeYearsAgo.reduce(\r\n        (prev, current) => {\r\n            return prev + current.amount\r\n        }, 0\r\n    );\r\n\r\n    badgeUnit.amount = Math.floor((amoutOfLastYear + amoutOfTwoYearsAgo + amoutOfThreeYearsAgo) /3)\r\n\r\n    return(\r\n        <Box\r\n            sx={{\r\n                m:2,\r\n                height:\"50px\",\r\n                textAlign:\"center\"\r\n            }}\r\n        >\r\n        {termStartYear !== 0 && termEndYear !== 0 && badgeClassification !== \"\"\r\n            ?\r\n            termStartYear*12 + termStartMonth > termEndYear*12 + termEndMonth\r\n                ?\r\n                <>\r\n                    <Warning\r\n                        color=\"error\"\r\n                        fontSize=\"small\"\r\n                    />\r\n                    <Typography \r\n                        color=\"error.light\"\r\n                        variant=\"subtitle2\"\r\n                        sx={{\r\n                            fontSize:\"10px\"\r\n                        }}\r\n                    >\r\n                        開始月が終了月の後になっています\r\n                    </Typography>\r\n                </>\r\n                :\r\n                <>\r\n                {/*\r\n                    <Typography \r\n                        color=\"gray\"\r\n                        variant=\"subtitle2\"\r\n                        sx={{\r\n                            whiteSpace:\"nowrap\",\r\n                            textAlign:\"left\",\r\n                            fontSize:\"12px\",\r\n                            p:\"0px 0px 0px 12px\"\r\n                        }}\r\n                    >\r\n                        Est. Amounts:<br/>\r\n                    </Typography>\r\n                    <Typography \r\n                        color=\"#696969\"\r\n                        variant=\"subtitle1\"\r\n                    >\r\n                        {badgeUnit.amount}件\r\n                    </Typography>*/}\r\n                    <Stack\r\n                        direction=\"row\"\r\n                    >\r\n                        <Grid\r\n                            container\r\n                        >\r\n                            <Grid\r\n                                xs={8}\r\n                            >\r\n                                <Box \r\n                                    sx={{\r\n                                        textAlign:\"right\",\r\n                                        whiteSpace:\"nowrap\",\r\n                                        color:\"gray\"\r\n                                    }}\r\n                                >\r\n                                    <Tooltip  title=\"3 years ago\">\r\n                                        <Typography\r\n                                            sx={{\r\n                                            fontSize:\"12px\",\r\n                                        }}>\r\n                                            {amoutOfThreeYearsAgo}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"2 years ago\">\r\n                                        <Typography\r\n                                            sx={{\r\n                                                fontSize:\"12px\",\r\n                                            }}>\r\n                                                {amoutOfTwoYearsAgo}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Last year\">\r\n                                        <Typography\r\n                                            sx={{\r\n                                                fontSize:\"12px\",\r\n                                            }}\r\n                                        >\r\n                                            {amoutOfLastYear}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid\r\n                                xs={20}\r\n                            >\r\n                                <Typography                                     \r\n                                    noWrap=\"true\"\r\n                                    color=\"gray\"\r\n                                    variant=\"subtitle2\"\r\n                                    textAlign=\"right\"\r\n                                    paddingTop=\"12px\"\r\n                                    sx={{\r\n                                        fontSize:\"12px\",\r\n                                    }}\r\n                                >\r\n                                    Est.:<br/>\r\n                                </Typography>\r\n                                <Typography \r\n                                    noWrap=\"true\"\r\n                                    color=\"black\"\r\n                                    variant=\"subtitle1\"\r\n                                    textAlign=\"right\"\r\n                                >\r\n                                    {badgeUnit.amount}件\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Stack>\r\n                </>  \r\n            :\r\n            <>\r\n                <Typography \r\n                    variant=\"subtitle2\"\r\n                    color=\"gray\"\r\n                    p=\"10px 0px 0px\"\r\n                    sx={{\r\n                        fontSize:\"12px\"\r\n                    }}\r\n                >\r\n                    Pleast enter parameters\r\n                </Typography>\r\n            </>\r\n        }\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default NumberPresenter;","import React from \"react\";\r\nimport { Box, ButtonGroup, Button, Tooltip } from \"@mui/material\";\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@mui/icons-material\";\r\n\r\nconst TermAdjuster = \r\n      ({ \r\n        index,\r\n        badgeUnit,\r\n        staff,\r\n        extendStopper,\r\n        onTermChange = f => f\r\n      }) =>\r\n{    \r\n    return (\r\n        <Box\r\n            sx={{\r\n                textAlign : \"right\"\r\n            }}\r\n        >\r\n            <ButtonGroup \r\n                disableElevation\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                aria-label=\"term adjuster buttons\"\r\n            >\r\n                <Tooltip\r\n                    title=\"Shortening\"\r\n                >                     \r\n                    <Button                            \r\n                        disabled={badgeUnit.badgeLength <= 2}\r\n                        onClick={()=>onTermChange(staff.id, index, false)}\r\n                    >\r\n                        <KeyboardArrowLeft\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip\r\n                    title=\"Extending\"\r\n                >                     \r\n                    <Button\r\n                        disabled={badgeUnit.badgeLength >= 8 || extendStopper === true}\r\n                        onClick={()=>onTermChange(staff.id, index, true)}\r\n                    >\r\n                        <KeyboardArrowRight\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            </ButtonGroup>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default TermAdjuster;","import React from \"react\";\r\nimport { Box, ButtonGroup, Button, Tooltip } from \"@mui/material\";\r\nimport { DeleteForeverOutlined, AddCircleOutlineOutlined } from \"@mui/icons-material\";\r\n\r\nconst BadgeNumberAdjuster = \r\n    ({\r\n        staff,\r\n        addBadgeStopper,\r\n        onBadgeNumberChange = f => f\r\n    }) =>\r\n{\r\n    return (\r\n        <Box\r\n            sx={{\r\n                textAlign : \"right\"\r\n            }}\r\n        >            \r\n            <ButtonGroup \r\n                disableElevation\r\n                variant=\"text\"\r\n                size=\"small\"\r\n                aria-label=\"term adjuster buttons\"\r\n            >\r\n                <Tooltip\r\n                    title=\"Remove a badge\"\r\n                >                     \r\n                    <Button                            \r\n                        //disabled={badgeUnit.badgeLength <= 2}\r\n                        onClick={()=>onBadgeNumberChange(staff.id, false)}\r\n                    >\r\n                        <DeleteForeverOutlined\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip\r\n                    title=\"Add a badge\"\r\n                >                     \r\n                    <Button\r\n                        disabled={addBadgeStopper === true}\r\n                        onClick={()=>onBadgeNumberChange(staff.id, true)}\r\n                    >\r\n                        <AddCircleOutlineOutlined\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            </ButtonGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BadgeNumberAdjuster;","import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { Warning } from \"@mui/icons-material\";\r\n\r\nconst TotalResultPresenter =\r\n    ({\r\n        badgeUnits,\r\n        isTotalTermMatched={isTotalTermMatched}\r\n    }) =>\r\n{   \r\n    //console.log(badgeUnits)\r\n    const totalAmount = badgeUnits.reduce(\r\n        (prev, current) => {\r\n            return prev + Number(current.amount);\r\n        }, 0\r\n    )\r\n\r\n    return(\r\n        <Box\r\n            sx={{\r\n                m:2,\r\n                //border:1,\r\n                textAlign:\"right\"\r\n            }}\r\n        >\r\n            <Box\r\n                sx={{\r\n                //border:1,\r\n                height:\"195px\",\r\n                }}\r\n            >\r\n            </Box>\r\n            {isTotalTermMatched === true ?\r\n            <>\r\n                <Typography \r\n                    color=\"black\"\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                        textAlign:\"right\",\r\n                        fontSize:\"12px\",\r\n                    }}\r\n                >\r\n                    Sum Est.:<br/>\r\n                </Typography>\r\n                <Typography \r\n                    color=\"#24140e\"\r\n                    variant=\"h5\"\r\n                >\r\n                    {totalAmount}件\r\n                </Typography>\r\n            </>\r\n            :\r\n            <>\r\n                <Warning\r\n                    color=\"error\"\r\n                    fontSize=\"small\"\r\n                    />\r\n                <Typography \r\n                    color=\"error.light\"\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                        fontSize:\"10px\"\r\n                    }}\r\n                >\r\n                    Please adjust term length\r\n                </Typography>\r\n            </>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TotalResultPresenter;","import React from \"react\";\r\n\r\nimport { Box, IconButton, Tooltip } from \"@mui/material\";\r\nimport { PlaylistAddCheck } from \"@mui/icons-material\";\r\n\r\n\r\nconst BadgeAllocater =\r\n    (\r\n\r\n    ) =>\r\n{\r\n    const openBadgeDialog = () => {\r\n        \r\n    };\r\n\r\n    const closeBadgeDialog = () => {\r\n\r\n    };\r\n\r\n    return(\r\n        <Box\r\n            sx={{\r\n                //border: \"1px dashed black\",\r\n                m:1\r\n            }}\r\n        >\r\n            <Tooltip \r\n                title=\"Change associated badge\"\r\n            >\r\n                <IconButton\r\n                    onClick={openBadgeDialog}\r\n                >\r\n                    <PlaylistAddCheck />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <badgeDialog\r\n                onClose={closeBadgeDialog}\r\n            />\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default BadgeAllocater;","import React from \"react\";\r\nimport { Grid, Stack } from \"@mui/material\";\r\n\r\nimport NameCard from \"./NameCard\";\r\nimport BadgeInputter from \"./BadgeInputter\";\r\nimport NumberPresenter from \"./NumberPresenter\"\r\nimport BadgeTermAdjuster from \"./BadgeTermAdjuster\"\r\nimport BadgeNumberAdjuster from \"./BadgeNumberAdjuster\"\r\nimport TotalResultPresenter from \"./TotalResultPresenter\";\r\nimport BadgeAllocater from \"./BadgeAllocater\";\r\n\r\nconst ScheduleOfStaff = \r\n    ({ \r\n        staff,\r\n        monthlyWindow,\r\n        badgeUnits,\r\n        //extendStopper,\r\n        onClassification = f => f,\r\n        onStartMonth = f => f,\r\n        onEndMonth = f => f,\r\n        onTermChange = f => f,\r\n        onBadgeNumberChange = f => f\r\n     }) => \r\n{\r\n    const GRID_HEIGHT = 280;\r\n\r\n    const sumTermsLength = badgeUnits.reduce((prev, current)  =>\r\n        {return prev + Number(current.badgeLength)}, 0);\r\n\r\n    const extendStopper =\r\n        sumTermsLength >= [...monthlyWindow].length * 4\r\n            ? true \r\n            : false\r\n\r\n    const addBadgeStopper =\r\n        sumTermsLength > [...monthlyWindow].length * 4 - 2\r\n            ? true\r\n            : false\r\n\r\n    const isTotalTermMatched =\r\n        sumTermsLength === [...monthlyWindow].length * 4\r\n            ? true\r\n            : false\r\n    \r\n    return(\r\n        <>\r\n            <Stack\r\n                direction=\"row\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    columns={4*[...monthlyWindow].length}\r\n                >\r\n                    <Grid\r\n                        xs={4*[...monthlyWindow].length/([...monthlyWindow].length+2)}\r\n                        height={GRID_HEIGHT+\"px\"}\r\n                        border=\"1px solid gray\"\r\n                    >\r\n                        <BadgeNumberAdjuster\r\n                            staff={staff}\r\n                            onBadgeNumberChange={onBadgeNumberChange}\r\n                            addBadgeStopper={addBadgeStopper}\r\n                        />\r\n                        <NameCard\r\n                            staff={staff}\r\n                        />\r\n                        <BadgeAllocater />\r\n                    </Grid>\r\n                        <Grid\r\n                            xs={4*[...monthlyWindow].length*[...monthlyWindow].length/([...monthlyWindow].length+2)}\r\n                            >\r\n                            <Stack\r\n                                direction=\"row\"\r\n                            >\r\n                            {[...badgeUnits].map((_,i) => \r\n                                <Grid\r\n                                    xs={badgeUnits[i].badgeLength}\r\n                                    height={GRID_HEIGHT+\"px\"}\r\n                                    border=\"1px solid gray\"\r\n                                    bgcolor={\r\n                                        i % 2 !== 0\r\n                                        ? \"#f8f4e6\"\r\n                                        : \"#fffff9\"\r\n                                    }\r\n                                >\r\n                                    <BadgeTermAdjuster\r\n                                        index={i}\r\n                                        staff={staff}\r\n                                        badgeUnit={badgeUnits[i]}\r\n                                        onTermChange={onTermChange}\r\n                                        extendStopper={extendStopper}\r\n                                    />\r\n                                    <BadgeInputter\r\n                                        index={i}\r\n                                        staff={staff}\r\n                                        badgeUnit={badgeUnits[i]}\r\n                                        onClassification={onClassification}\r\n                                        onStartMonth={onStartMonth}\r\n                                        onEndMonth={onEndMonth}\r\n                                    />\r\n                                    <NumberPresenter\r\n                                        badgeUnit={badgeUnits[i]}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            </Stack>\r\n                        </Grid>\r\n                    <Grid\r\n                        xs={4*[...monthlyWindow].length/([...monthlyWindow].length+2)}\r\n                        height={GRID_HEIGHT+\"px\"}\r\n                        border={\r\n                            isTotalTermMatched === true\r\n                                ? \"1px solid gray\"\r\n                                : \"1px dashed #ff6347\"\r\n                        }\r\n                    >\r\n                        <TotalResultPresenter\r\n                            badgeUnits={badgeUnits}\r\n                            isTotalTermMatched={isTotalTermMatched}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Stack>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ScheduleOfStaff;","import { createTheme } from \"@mui/material/styles\";\r\n\r\nconst customTheme = createTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n            main: \"#ff6347\"\r\n        },\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#0000cd\"\r\n\t\t},\r\n        error : {\r\n            main: \"#ff6347\"\r\n        },\r\n        info : {\r\n            main: \"#fafad2\"\r\n        }\r\n\t}\r\n})\r\n\r\nexport default customTheme; ","//import './App.css';\nimport React from \"react\";\nimport { ThemeProvider, Box, Button } from \"@mui/material\";\nimport { PersonAdd } from \"@mui/icons-material\";\n\nimport MyAppBar from \"./Components/MyAppBar\";\nimport TopRow from \"./Components/TopRow\";\nimport ScheduleOfStaff from \"./Components/ScheduleOfStaff\"\nimport StaffInserter from \"./Components/StaffInserter\"\n\nimport customTheme from \"./resources/customTheme.js\";\nimport monthlyWindow from \"./resources/monthlyWindow.json\";\nimport staffs from \"./resources/staffs.json\";\n\nconst App = () => \n{\n\tconst initialBadgeUnitsOfStaff = [...monthlyWindow].map((_,i) => (\n        {\t\n\t\t\tindex:i,\n            badgeClassification:\"\",\n\t\t\tbadgeLength:4,\n            startMonth:\"\",\n            endMonth:\"\",\n            amount:0\n        }\n    ));\n\tconst initialBadge = [...staffs].map((val) => (\n\t\t{\n\t\t\tstaffID : val.id,\n\t\t\t//extendStopper : true,\n\t\t\tbadgeUnits: [...initialBadgeUnitsOfStaff]\n\t\t}\n\t));\n\tconst [badge, setBadge] = React.useState(initialBadge);\n\t\n\tconsole.log(badge);\n\n\tconst onClassification = (staffID, index, badgeClassification) => {\n\t\tconst newBadge = [...badge].map(val => \n\t\t\tval.staffID === staffID \n\t\t\t\t? {...val, badgeUnits:val.badgeUnits.map( val =>\n\t\t\t\t\tval.index === index\n\t\t\t\t\t\t? {...val, badgeClassification}\n\t\t\t\t\t\t: val\t\t\t\t\n\t\t\t\t\t)}\n\t\t\t\t: val\t\n\t\t)\n\t\tsetBadge(newBadge);\n\t}\n\n\tconst onStartMonth = (staffID, index, startMonth) => {\n\t\tconst newBadge = [...badge].map(val => \n\t\t\tval.staffID === staffID \n\t\t\t\t? {...val, badgeUnits:val.badgeUnits.map( val =>\n\t\t\t\t\tval.index === index\n\t\t\t\t\t\t? {...val, startMonth}\n\t\t\t\t\t\t: val\t\t\t\t\n\t\t\t\t\t)}\n\t\t\t\t: val\n\t\t)\n\t\tsetBadge(newBadge);\n\t}\n\n\tconst onEndMonth = (staffID, index, endMonth) => {\n\t\tconst newBadge = [...badge].map(val => \n\t\t\tval.staffID === staffID \n\t\t\t\t? {...val, badgeUnits: val.badgeUnits.map( val =>\n\t\t\t\t\tval.index === index\n\t\t\t\t\t\t? {...val, endMonth}\n\t\t\t\t\t\t: val\t\t\t\t\n\t\t\t\t\t)}\n\t\t\t\t: val\n\t\t)\n\t\tsetBadge(newBadge);\n\t}\n\n\tconst onTermChange = (staffID, index, isExtend) => {\n\t\tconst newBadge = [...badge].map(val => \n\t\t\tval.staffID === staffID\n\t\t\t\t? {...val, badgeUnits:val.badgeUnits.map( val =>\n\t\t\t\t\tval.index === index && isExtend === true\n\t\t\t\t\t\t? {...val, badgeLength: val.badgeLength + 1}\n\t\t\t\t\t\t: val.index === index && isExtend === false\n\t\t\t\t\t\t\t? {...val, badgeLength: val.badgeLength -1 }\n\t\t\t\t\t\t\t\t: val\n\t\t\t\t\t)}\n\t\t\t\t:val\n\t\t)\n\t\tsetBadge(newBadge);\n\t}\n\n\tconst onBadgeNumberChange = (staffID, isAdd) => {\n\t\tconsole.log(staffID, isAdd)\n\t\tconst newBadge = [...badge].map(val =>\n\t\t\tval.staffID === staffID && isAdd === false\n\t\t\t\t? {...val, badgeUnits: val.badgeUnits.filter((_,i) =>\n\t\t\t\t\t(i !== val.badgeUnits.length-1)\n\t\t\t\t)}\n\t\t\t\t: val.staffID === staffID && isAdd === true\n\t\t\t\t\t? {...val, badgeUnits: val.badgeUnits.concat(\n\t\t\t\t\t\t{\n\t\t\t\t\t\tindex:val.badgeUnits.length,\n\t\t\t\t\t\tbadgeClassification:\"\",\n\t\t\t\t\t\tbadgeLength:2,\n\t\t\t\t\t\tstartMonth:\"\",\n\t\t\t\t\t\tendMonth:\"\",\n\t\t\t\t\t\tamount:0\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t: val\n\t\t)\n\t\tsetBadge(newBadge);\t\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider \n\t\t\t\ttheme={customTheme}\n\t\t\t>\n        \t\t<MyAppBar/>\t\t\t\t\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tm:\"0px 10px 0px\",\n\t\t\t\t\t\t//width:\"3000px\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TopRow\n\t\t\t\t\t\tmonthlyWindow={monthlyWindow}\n\t\t\t\t\t/>\n\t\t\t\t\t{[...staffs].map((staff,i)=>\n\t\t\t\t\t\t<ScheduleOfStaff\n\t\t\t\t\t\t\tkey={staff.id}\n\t\t\t\t\t\t\tstaff={staff}\n\t\t\t\t\t\t\tbadgeUnits={\n\t\t\t\t\t\t\t\tstaff.id === badge[i].staffID\n\t\t\t\t\t\t\t\t\t? badge[i].badgeUnits\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/*extendStopper={\n\t\t\t\t\t\t\t\tstaff.id === badge[i].staffID\n\t\t\t\t\t\t\t\t\t? badge[i].extendStopper\n\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t}*/\n\t\t\t\t\t\t\tmonthlyWindow={monthlyWindow}\n\t\t\t\t\t\t\tonClassification={onClassification}\n\t\t\t\t\t\t\tonStartMonth={onStartMonth}\n\t\t\t\t\t\t\tonEndMonth={onEndMonth}\n\t\t\t\t\t\t\tonTermChange={onTermChange}\n\t\t\t\t\t\t\tonBadgeNumberChange={onBadgeNumberChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tstartIcon={<PersonAdd/>}\n\t\t\t\t\tsx={{m:1}}\n\t\t\t\t>\n\t\t\t\t\tAdd New Person\n\t\t\t\t</Button>\n\t\t\t\t←SIP\n\t\t\t\t</Box>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t)\t\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}